error[E0277]: the trait bound `CustomKeyType: serde::ser::Serialize` is not satisfied
  --> tests/ui/map_missing_serialize.rs:10:5
   |
10 |     #[dbstruct::dbstruct(db=sled)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `serde::ser::Serialize` is not implemented for `CustomKeyType`
   |
   = note: for local types consider adding `#[derive(serde::Serialize)]` to your `CustomKeyType` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `serde::ser::Serialize`:
             &'a T
             &'a mut T
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
             (T0, T1, T2, T3, T4)
           and $N others
note: required by a bound in `dbstruct::wrapper::Map`
  --> src/wrapper/map.rs
   |
   | pub struct Map<Key, Value, DS>
   |            --- required by a bound in this struct
   | where
   |     Key: Serialize,
   |          ^^^^^^^^^ required by this bound in `Map`
   = note: this error originates in the attribute macro `dbstruct::dbstruct` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `CustomValType: serde::ser::Serialize` is not satisfied
  --> tests/ui/map_missing_serialize.rs:10:5
   |
10 |     #[dbstruct::dbstruct(db=sled)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `serde::ser::Serialize` is not implemented for `CustomValType`
   |
   = note: for local types consider adding `#[derive(serde::Serialize)]` to your `CustomValType` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `serde::ser::Serialize`:
             &'a T
             &'a mut T
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
             (T0, T1, T2, T3, T4)
           and $N others
note: required by a bound in `dbstruct::wrapper::Map`
  --> src/wrapper/map.rs
   |
   | pub struct Map<Key, Value, DS>
   |            --- required by a bound in this struct
...
   |     Value: Serialize + DeserializeOwned,
   |            ^^^^^^^^^ required by this bound in `Map`
   = note: this error originates in the attribute macro `dbstruct::dbstruct` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `for<'de> CustomValType: serde::de::Deserialize<'de>` is not satisfied
  --> tests/ui/map_missing_serialize.rs:10:5
   |
10 |     #[dbstruct::dbstruct(db=sled)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `for<'de> serde::de::Deserialize<'de>` is not implemented for `CustomValType`
   |
   = note: for local types consider adding `#[derive(serde::Deserialize)]` to your `CustomValType` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `serde::de::Deserialize<'de>`:
             &'a Path
             &'a [u8]
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
           and $N others
   = note: required for `CustomValType` to implement `serde::de::DeserializeOwned`
note: required by a bound in `dbstruct::wrapper::Map`
  --> src/wrapper/map.rs
   |
   | pub struct Map<Key, Value, DS>
   |            --- required by a bound in this struct
...
   |     Value: Serialize + DeserializeOwned,
   |                        ^^^^^^^^^^^^^^^^ required by this bound in `Map`
   = note: this error originates in the attribute macro `dbstruct::dbstruct` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `CustomKeyType: serde::ser::Serialize` is not satisfied
  --> tests/ui/map_missing_serialize.rs:10:5
   |
10 |     #[dbstruct::dbstruct(db=sled)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `serde::ser::Serialize` is not implemented for `CustomKeyType`
   |
   = note: for local types consider adding `#[derive(serde::Serialize)]` to your `CustomKeyType` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `serde::ser::Serialize`:
             &'a T
             &'a mut T
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
             (T0, T1, T2, T3, T4)
           and $N others
note: required by a bound in `dbstruct::wrapper::Map::<Key, Value, DS>::new`
  --> src/wrapper/map.rs
   |
   |     Key: Serialize + DeserializeOwned,
   |          ^^^^^^^^^ required by this bound in `Map::<Key, Value, DS>::new`
...
   |     pub fn new(tree: DS, prefix: u8) -> Self {
   |            --- required by a bound in this associated function
   = note: this error originates in the attribute macro `dbstruct::dbstruct` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `CustomValType: serde::ser::Serialize` is not satisfied
  --> tests/ui/map_missing_serialize.rs:10:5
   |
10 |     #[dbstruct::dbstruct(db=sled)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `serde::ser::Serialize` is not implemented for `CustomValType`
   |
   = note: for local types consider adding `#[derive(serde::Serialize)]` to your `CustomValType` type
   = note: for types from other crates check whether the crate offers a `serde` feature flag
   = help: the following other types implement trait `serde::ser::Serialize`:
             &'a T
             &'a mut T
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
             (T0, T1, T2, T3, T4)
           and $N others
note: required by a bound in `dbstruct::wrapper::Map::<Key, Value, DS>::new`
  --> src/wrapper/map.rs
   |
   |     Value: Serialize + DeserializeOwned,
   |            ^^^^^^^^^ required by this bound in `Map::<Key, Value, DS>::new`
...
   |     pub fn new(tree: DS, prefix: u8) -> Self {
   |            --- required by a bound in this associated function
   = note: this error originates in the attribute macro `dbstruct::dbstruct` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `CustomKeyType: serde::de::DeserializeOwned` is not satisfied
  --> tests/ui/map_missing_serialize.rs:10:5
   |
10 |     #[dbstruct::dbstruct(db=sled)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `for<'de> serde::de::Deserialize<'de>` is not implemented for `CustomKeyType`
   |
   = help: the following other types implement trait `serde::de::Deserialize<'de>`:
             &'a Path
             &'a [u8]
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
           and $N others
   = note: required for `CustomKeyType` to implement `serde::de::DeserializeOwned`
note: required by a bound in `dbstruct::wrapper::Map::<Key, Value, DS>::new`
  --> src/wrapper/map.rs
   |
   |     Key: Serialize + DeserializeOwned,
   |                      ^^^^^^^^^^^^^^^^ required by this bound in `Map::<Key, Value, DS>::new`
...
   |     pub fn new(tree: DS, prefix: u8) -> Self {
   |            --- required by a bound in this associated function
   = note: this error originates in the attribute macro `dbstruct::dbstruct` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `CustomValType: serde::de::DeserializeOwned` is not satisfied
  --> tests/ui/map_missing_serialize.rs:10:5
   |
10 |     #[dbstruct::dbstruct(db=sled)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `for<'de> serde::de::Deserialize<'de>` is not implemented for `CustomValType`
   |
   = help: the following other types implement trait `serde::de::Deserialize<'de>`:
             &'a Path
             &'a [u8]
             &'a str
             ()
             (T,)
             (T0, T1)
             (T0, T1, T2)
             (T0, T1, T2, T3)
           and $N others
   = note: required for `CustomValType` to implement `serde::de::DeserializeOwned`
note: required by a bound in `dbstruct::wrapper::Map::<Key, Value, DS>::new`
  --> src/wrapper/map.rs
   |
   |     Value: Serialize + DeserializeOwned,
   |                        ^^^^^^^^^^^^^^^^ required by this bound in `Map::<Key, Value, DS>::new`
...
   |     pub fn new(tree: DS, prefix: u8) -> Self {
   |            --- required by a bound in this associated function
   = note: this error originates in the attribute macro `dbstruct::dbstruct` (in Nightly builds, run with -Z macro-backtrace for more info)
